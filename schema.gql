
# =================================== >>>
# =================================== >>> Metadata
# =================================== >>>

type Info {
	collection: String! @unique @index
	count: Int
}

# =================================== >>>
# =================================== >>> Users & Auth
# =================================== >>>

type User {
	username: String! @unique
	hash: String
	salt: String
	role: String!
	first_name: String
	last_name: String
	avatar: String
}

# =================================== >>>
# =================================== >>> Basic Types
# =================================== >>>

type Route {
	title: String!
	slug: String! @unique
	html: String
	header_navigation: Boolean
	footer_navigation: Boolean
}
type Post {
	old_id: String
	published: Long!
	status: String
	slug: String! @unique @index
	headline: String! @unique
	subheadline: String
	author: String
	byline: String
	link_back: String # TODO: make this a typed array????
	html: String!
	assets: [Asset] @relation
	tags: [Tag] @relation
}

# =================================== >>>
# =================================== >>> Assets & Asset Groups
# =================================== >>>

type Asset {
	old_id: String
	url: String
	handle: String
	filename: String
	width: Int
	height: Int
	size: Long
	mime_type: String
	caption: String
	source: String
	poster: Asset
	posts: [Post] @relation
	asset_bins: [AssetGroup] @relation
	clips: [Clip] @relation
}
type AssetGroup {
	old_id: String
	status: String
	published: Long!
	title: String!
	slug: String # believe it or not, we're not making it mandatory
	detail: String
	html: String # does this belong with the asset????????
	assets: [Asset!] @relation # remember to go fix for that one linked asset

	# TODO: we're going to have to figure out a better taxonomy strategy
	# BUT THIS APPROACH is currently backward compatible sad face ðŸ™ƒ
	source: String
	content_type: String
	subject: String
	year: Int
	tags: [Tag] @relation
}

# =================================== >>>
# =================================== >>> Modals / Stories
# =================================== >>>

type Modal {
	name: String @unique
	# width: Int
	# height: Int
	root: Clip
	clips: [Clip!] @relation(name: "modal_clips")
}
type Clip {
	name: String
	type: String
	# styles: String
	assets: [Asset] @relation
	# intervals: [Interval!] @relation
	children: [Clip!]
	# parent: Clip
	modal: Modal! @relation(name: "modal_clips")
}
type Interval {
	name: String
	start: Int
	stop: Int
	keyframes: String
	clip: Clip!
}

# =================================== >>>
# =================================== >>> Taxonomies
# =================================== >>>

type Tag {
	old_id: String
	name: String! @unique
	posts: [Post] @relation
	asset_bins: [AssetGroup] @relation
}

# =================================== >>>
# =================================== >>> Query Series
# =================================== >>>

type Query {
	Infos: [Info!]!
	Users: [User!]!
	Routes: [Route!]!
	Posts: [Post!]!
	Assets: [Asset!]!
	AssetGroups: [AssetGroup!]!
	Modals: [Modal!]!
	Clips: [Clip!]!
	# Intervals: [Interval!]!
	Tags: [Tag!]!

	findInfoByCollection(collection: String!): Info
	findPostBySlug(slug: String!): Post
	findAssetGroupBySlug(slug: String!): AssetGroup
}
